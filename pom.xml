<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.savantly.spot</groupId>
	<artifactId>spot-web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spot-web</name>

	<parent>
		<groupId>net.savantly.sprout</groupId>
		<artifactId>web-parent</artifactId>
		<version>1.5.0-SNAPSHOT</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<sprout.version>1.5.0-SNAPSHOT</sprout.version>
		<janusgraph.version>0.2.0</janusgraph.version>
		<tinkerpop.version>3.2.6</tinkerpop.version>
		<lucene.version>7.0.0</lucene.version>
		<!-- Setting {custom.ui = true} means we will provide our own front-end -->
		<custom.ui>true</custom.ui>
		<ui.dist.folder>${basedir}/dist</ui.dist.folder>
		<ui.root.folder>${basedir}</ui.root.folder> <!-- Location of package.json -->
		<!-- End of custom UI properties -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-server</artifactId>
			<version>${tinkerpop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- This tells our parent pom to skip the pre-configured npm steps -->
				<server.only>true</server.only>
			</properties>
			<build>
				<plugins>
					<plugin>
						<!-- we'll start the front end separately from the backend. This lets 
							us keep the backend server running, while we develop the front-end -->
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<CHROME_BIN>${CHROME_BIN}</CHROME_BIN>
							</environmentVariables>
						</configuration>
						<executions>
							<execution>
								<id>serve front-end angular app</id>
								<phase>compile</phase>
								<configuration>
									<target>
										<property name="npm_binary" value="${npm.binary}" />
										<exec executable="${npm_binary}" spawn="true">
											<arg value="run" />
											<arg value="start" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<!-- I dont want to execute npm build unless we're ready to release, 
							rather I'll use 'ng serve` with a proxy to connect to the sprout backend. 
							This makes front end development easier -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>

		</plugins>
	</build>

	<description>Web interface for a graph abstraction of networked objects</description>
</project>
